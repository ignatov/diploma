@Article{joepamer2011,
    author	= {Donna Malayeru, Joe Pamer, Don Syme},
    year	= {2011},
    title	= {Strongly-Typed Language Supportfor an Information-Rich World},
    note	= {Microsoft Corparation}
}
@manual{gosuguide,
    organization = {Guidewire Software, Inc},
    year	= {2011},
    title	= {Gosu Reference Guide},
    note	= {Доступно по адресу \url{http://gosu-lang.org/doc/pdf/gosuref.pdf}}
}
@techreport{bracha,
    author	= {Gilad Bracha},
    year	= {2004},
    title	= {Pluggable Type Systems},
    note	= {OOPSLA Workshop on revival of Dynamic Languages}
}
@Article{pierce,
    author	  = {Benjamin C. Pierce},
    year	  = {2002},
    title	  = {Types and Programming Languages},
    publisher = {The MIT Press}
}
@article{javacop2010, 
    title={JavaCOP: Declarative Pluggable Types for Java}, 
    volume={32}, 
    url={http://doi.acm.org/10.1145/1667048.1667049}, 
    number={2}, 
    journal={ACM Transactions on Programming Languages and Systems}, 
    publisher={ACM}, 
    author={Markstrum, Shane and Marino, Daniel and Esquivel, Matthew and Millstein, Todd and Andreae, Chris and Noble, James}, 
    year={2010}
}
@inproceedings{checkerframework2008,
   author = {Matthew M. Papi and Mahmood Ali and Correa Jr., Telmo Luis
    and Jeff H. Perkins and Michael D. Ernst},
   title = {Practical pluggable types for {Java}},
   booktitle = {ISSTA 2008, Proceedings of the 2008 International
    Symposium on Software Testing and Analysis},
   pages = {201--212},
   address = {Seattle, WA, USA},
   month = {July~22--24,},
   year = {2008}
}
@article{strongtalk1993,
    address = {New York, NY, USA},
    author = {Bracha, Gilad and Griswold, David},
    booktitle = {OOPSLA '93: Proceedings of the eighth annual conference on Object-oriented programming systems, languages, and applications},
    journal = {SIGPLAN Not.},
    publisher = {ACM},
    title = {{Strongtalk: typechecking Smalltalk in a production environment}},
    year = {1993}
}
@techreport{newspeak2008,
    author = {Bracha, G. and Ahe, P. and Bykov, V. and Kashai, Y. and Miranda, E.},
    institution = {Cadence Design Systems},
    title = {{The Newspeak Programming Platform}},
    year = {2008}
}
@manual{scala-spec,
    author	= {Martin Odersky},
    year	= {2011},
    title	= {The Scala Language Specification},
    note	= {\url{http://scala-lang.org/docu/files/ScalaReference.pdf}}
}
@manual{E4X,
    year	= {2005},
    title	= {Standard ECMA-357 ECMAScript for XML (E4X) Specification, 2nd Edition},
    note	= {Доступно по адресу \url{http://ecma-international.org/publications/files/ECMA-ST/Ecma-357.pdf}}
}
@misc{scala-compiler-plugin,
    author = {Anders Bach Nielsen},
    title = {Compiler phase and plug-in initialization for Scala 2.8},
    year = {2009},
    note = {Scala Improvement Document 2. \url{http://www.scala-lang.org/sid/2}},
}
@incollection{metaocaml,
    abstract = {{Multi-stage programming (MSP) is a paradigm for developing generic software that does not pay a runtime penalty for this generality. This is achieved through concise, carefully-designed language extensions that support runtime code generation and program execution. Additionally, type systems for MSP languages are designed to statically ensure that dynamically generated programs are type-safe, and therefore require no type checking after they are generated. This hands-on tutorial is aimed at the reader interested in learning the basics of MSP practice. The tutorial uses a freely available MSP extension of OCaml called MetaOCaml, and presents a detailed analysis of the issues that arise in staging an interpreter for a small programming language. The tutorial concludes with pointers to various resources that can be used to probe further into related topics.}},
    author = {Walid Taha},
    booktitle = {Domain-Specific Program Generation },
    journal = {Domain-Specific Program Generation},
    pages = {30--50},
    title = {{A Gentle Introduction to Multi-stage Programming}},
    url = {http://www.springerlink.com/content/jemt0d8vyn5jb2l8},
    year = {2004}
}
@Article{extendible-c,
    author	= {Dawson R. Engler},
    title   = {{VCODE}: A Retargetable, Extensible, Very Fast Dynamic Code Generation System},
    journal = {PLDI '96},
    year	= {1996}
}
@techreport{metaml,
    author = {Moggi, Eugenio and Taha, Walid and Benaissa, Zine E and Sheard, Tim},
    title = {An Idealized {MetaML}: Simpler, and More Expressive},
    year = {1998},
    source = {http://www.ncstrl.org:8900/ncstrl/servlet/search?formname=detail\&id=oai%3Ancstrlh%3Aogi_cse%3Ancstrl.ogi_cse%2F%2FCSE-98-017-short},
    publisher = {Oregon Graduate Institute School of Science \& Engineering},
} 
@book{codecomplete,
    author	= {Steve McConnell},
    year	= {2004},
    publisher = {Microsoft Press, Redmond, WA, USA},
    title	= {Code Complete, Second Edition}
}
@book{fsharp2010expert,
    title       =   {Expert F\# 2.0},
    author      =   {Don Syme, Adam Granicz, Antonio Cisternino},
    year        =   {2010},
    publisher   =   {Apress}
}
@article{breslav2011,
    author = {Бреслав А.А.},
    title = {Язык программирования {Kotlin}},
    journal = {Открытые системы},
    year = {2011},
    number = {9}
}
@article{haskell98,
  author = {Simon {Peyton Jones} and others},
  title = {The {Haskell} 98 Language and Libraries: The Revised Report},
  journal = {Journal of Functional Programming},
  volume = 13,
  number = 1,
  pages = {1--255},
  month = {Jan},
  year = 2003,
  note = {\url{http://www.haskell.org/definition/}},
}